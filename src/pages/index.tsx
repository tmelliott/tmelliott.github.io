import type { NextPage } from "next";
import Head from "next/head";
// import { signIn, signOut, useSession } from "next-auth/react";
import { trpc } from "../utils/trpc";

import { motion } from "framer-motion";

const Home: NextPage = () => {
  // const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto flex min-h-screen w-screen flex-col items-center justify-center bg-gradient-to-b from-slate-500 to-slate-800 p-4">
        {/* nav buttons */}

        {/* title */}
        <div className="flex flex-col items-center">
          <motion.h1
            initial={{ filter: "blur(10px)", opacity: 0, y: -100 }}
            animate={{
              filter: "blur(0px)",
              opacity: 1,
              y: 0,
              transition: { delay: 0.5, duration: 2 },
            }}
            className="flex h-32 w-32  items-center justify-center rounded-full bg-gradient-to-b from-gray-200 to-gray-400 text-6xl"
          >
            te
          </motion.h1>
          <motion.div
            initial={{ opacity: 0, scale: 1.3, filter: "blur(6px)" }}
            animate={{
              opacity: 1,
              scale: 1,
              filter: "blur(3px)",
              transition: { delay: 0.5, duration: 2 },
            }}
            className="mt-10 h-[8px] w-3/5 rounded-[100%] bg-black"
          ></motion.div>
        </div>

        {/* social icons */}
      </main>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

//   const { data: sessionData } = useSession();

//   return (
//     <div className="flex flex-col items-center justify-center gap-2">
//       {sessionData && (
//         <p className="text-2xl text-blue-500">
//           Logged in as {sessionData?.user?.name}
//         </p>
//       )}
//       {secretMessage && (
//         <p className="text-2xl text-blue-500">{secretMessage}</p>
//       )}
//       <button
//         className="rounded-md border border-black bg-violet-50 px-4 py-2 text-xl shadow-lg hover:bg-violet-100"
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };

// type TechnologyCardProps = {
//   name: string;
//   description: string;
//   documentation: string;
// };

// const TechnologyCard = ({
//   name,
//   description,
//   documentation,
// }: TechnologyCardProps) => {
//   return (
//     <section className="flex flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
//       <h2 className="text-lg text-gray-700">{name}</h2>
//       <p className="text-sm text-gray-600">{description}</p>
//       <a
//         className="m-auto mt-3 w-fit text-sm text-violet-500 underline decoration-dotted underline-offset-2"
//         href={documentation}
//         target="_blank"
//         rel="noreferrer"
//       >
//         Documentation
//       </a>
//     </section>
//   );
// };
